openapi: 3.0.1
info:
  title: Public Webhooks API
  description: Webhooks API
  version: v1
servers:
  - url: https://api.vipps.no/webhooks
    description: Production (Prod)
  - url: https://apitest.vipps.no/webhooks
    description: Test (MT)
paths:
  /v1/webhooks:
    get:
      tags:
        - v1
      summary: Get all registered webhooks
      parameters:
        - $ref: '#/components/parameters/APIM-Subscription-Key'
        - $ref: '#/components/parameters/Merchant-Serial-Number'
        - $ref: '#/components/parameters/Vipps-System-Name'
        - $ref: '#/components/parameters/Vipps-System-Version'
        - $ref: '#/components/parameters/Vipps-System-Plugin-Name'
        - $ref: '#/components/parameters/Vipps-System-Plugin-Version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - v1
      summary: Register webhook
      description: 'At most 5 webhooks can currently be registered per event, please reach out if a higher limit is required.'
      parameters:
        - $ref: '#/components/parameters/APIM-Subscription-Key'
        - $ref: '#/components/parameters/Merchant-Serial-Number'
        - $ref: '#/components/parameters/Vipps-System-Name'
        - $ref: '#/components/parameters/Vipps-System-Version'
        - $ref: '#/components/parameters/Vipps-System-Plugin-Name'
        - $ref: '#/components/parameters/Vipps-System-Plugin-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  '/v1/webhooks/{id}':
    delete:
      tags:
        - v1
      summary: Delete webhook
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/APIM-Subscription-Key'
        - $ref: '#/components/parameters/Merchant-Serial-Number'
        - $ref: '#/components/parameters/Vipps-System-Name'
        - $ref: '#/components/parameters/Vipps-System-Version'
        - $ref: '#/components/parameters/Vipps-System-Plugin-Name'
        - $ref: '#/components/parameters/Vipps-System-Plugin-Version'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    ExtraDetail:
      required:
        - name
        - reason
      type: object
      properties:
        name:
          type: string
          example: url
        reason:
          type: string
          example: The property is required and cannot be null or empty.
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
          example: 00-bb841c551513e233de8a01472013fa9f-542c71e40916a6ce-00
        title:
          type: string
          nullable: true
          example: Bad Request
        status:
          type: integer
          format: int32
          nullable: true
          example: 400
        detail:
          type: string
          nullable: true
          example: One or more validation errors occurred.
        instance:
          type: string
          nullable: true
          example: /v1/webhooks
        traceId:
          type: string
          nullable: true
          example: 00-bb841c551513e233de8a01472013fa9f-542c71e40916a6ce-00
        extraDetails:
          type: array
          items:
            $ref: '#/components/schemas/ExtraDetail'
          nullable: true
      additionalProperties: false
    QueryResponse:
      required:
        - webhooks
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
      additionalProperties: false
    RegisterRequest:
      required:
        - events
        - url
      type: object
      properties:
        url:
          type: string
          description: |-
            The URL that updates should be sent to.
            Must be a valid, world-reachable URL.
            The URL must use HTTPS.
            Can not be a URL that redirects to a different URL.
            We don't send requests to all ports, so to be safe use common ports such as: 80, 443, 8080.
          format: uri
          example: https://example.com/webhook-callback
        events:
          type: array
          items:
            type: string
          description: 'See [Webhooks API Events](https://developer.vippsmobilepay.com/docs/APIs/webhooks-api/events/) for details.'
          example:
            - epayments.payment.captured.v1
            - epayments.payment.created.v1
      additionalProperties: false
    RegisterResponse:
      required:
        - id
        - secret
      type: object
      properties:
        id:
          type: string
          format: uuid
        secret:
          type: string
          example: 090a478d-37ff-4e77-970e-d457aeb26a3a
      additionalProperties: false
    Webhook:
      required:
        - events
        - id
        - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          format: uri
          example: https://example.com/callbacks
        events:
          type: array
          items:
            type: string
          example:
            - epayments.payment.captured.v1
            - epayments.payment.created.v1
      additionalProperties: false
  parameters:
    Merchant-Serial-Number:
      name: Merchant-Serial-Number
      in: header
      required: true
      schema:
        type: string
        pattern: '^[0-9]{4,6}$'
        minLength: 4
        maxLength: 6
        example: '123456'
      description: "The Sales unit's MSN: The unique identifier for the sales unit."
    APIM-Subscription-Key:
      name: Ocp-Apim-Subscription-Key
      in: header
      required: true
      schema:
        type: string
        example: da7d5b0e18a84aeda961c0c31b75c2a9
      description: APIM Subscription Key
    Vipps-System-Name:
      name: Vipps-System-Name
      in: header
      description: The name of the ecommerce solution. One word in lowercase letters is good.
      schema:
        type: string
        example: woocommerce
    Vipps-System-Version:
      name: Vipps-System-Version
      in: header
      description: The version number of the ecommerce solution.
      schema:
        type: string
        example: '5.4.0'
    Vipps-System-Plugin-Name:
      name: Vipps-System-Plugin-Name
      in: header
      description: The name of the ecommerce plugin (if applicable). One word in lowercase letters is good.
      schema:
        type: string
      example: "vipps-woocommerce"
    Vipps-System-Plugin-Version:
      name: Vipps-System-Plugin-Version
      in: header
      description: The version number of the ecommerce plugin (if applicable).
      schema:
        type: string
        example: "1.2.1"
  securitySchemes:
    Bearer-Authorization:
      name: Authorization
      type: apiKey
      in: header
      description: Access bearer token (JWT)

security:
  - Bearer-Authorization: []